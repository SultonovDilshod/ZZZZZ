from aiogram import types
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters import Command
from aiogram.utils.markdown import hide_link
from loader import dp
from aiogram.dispatcher import filters
import re
from aiogram.types import ReplyKeyboardRemove
from aiogram.dispatcher.filters import Command, Text
from aiogram.types import ReplyKeyboardRemove, CallbackQuery
from keyboards.default.keyboards import yes_no, main_menu_btn_uz, bekor_qilish_uzb, language_option, post_nomi_avto_uzb
from keyboards.default.keyboards import post_nomi_avto_temiryul_uzb, orqaga_qaytish_uzb
from keyboards.inline.uzb_inline import Tumanlar_26002_uzb_avto, Tumanlar_26003_uzb_avto, Tumanlar_26004_uzb_avto, Tumanlar_26010_uzb_avto
from keyboards.inline.uzb_inline import Tumanlar_26002_uzb_jd, Tumanlar_26003_uzb_jd, Tumanlar_26004_uzb_jd, Tumanlar_26010_uzb_jd
from keyboards.inline.uzb_inline import uz_yukli_ombor_uzb, avto_26002_bektemir, avto_26002_yashnabod, avto_26002_yakkasaroy, avto_26002_shayxontohur
from keyboards.inline.uzb_inline import avto_26003_yakkasaroy, avto_26003_chilonzor, avto_26003_sergeli, avto_26003_yangiyul, avto_26003_zangiota

from states.personal_data import PersonalData
from states.uzb_lan import UZB_lan
from states.start_zero import Start_zero

import sqlite3
from loader import db, dp, bot
from data.config import ADMINS


@dp.message_handler(text='/start', state=Start_zero.start_zero)
@dp.message_handler(text='/start', state=UZB_lan.uzb)
@dp.message_handler(text='/start', state=UZB_lan.uzb_post_avto)
@dp.message_handler(text='/start', state=UZB_lan.uzb_post_jd)
@dp.message_handler(text='/start', state=UZB_lan.uzb_sklad_avto_26002)
@dp.message_handler(text='/start', state=UZB_lan.uzb_sklad_jd_26002)
@dp.message_handler(text='/start', state=UZB_lan.uzb_tuman_avto_26002)
@dp.message_handler(text='/start', state=UZB_lan.uzb_tuman_jd_26002)
@dp.message_handler(text='/start', state=UZB_lan.uzb_sklad_avto_26003)
@dp.message_handler(text='/start', state=UZB_lan.uzb_sklad_jd_26003)
@dp.message_handler(text='/start', state=UZB_lan.uzb_tuman_avto_26003)
@dp.message_handler(text='/start', state=UZB_lan.uzb_tuman_jd_26003)
@dp.message_handler(text='/start', state=UZB_lan.uzb_sklad_avto_26004)
@dp.message_handler(text='/start', state=UZB_lan.uzb_sklad_jd_26004)
@dp.message_handler(text='/start', state=UZB_lan.uzb_tuman_avto_26004)
@dp.message_handler(text='/start', state=UZB_lan.uzb_tuman_jd_26004)
@dp.message_handler(text='/start', state=UZB_lan.uzb_sklad_avto_26010)
@dp.message_handler(text='/start', state=UZB_lan.uzb_sklad_jd_26010)
@dp.message_handler(text='/start', state=UZB_lan.uzb_tuman_avto_26010)
@dp.message_handler(text='/start', state=UZB_lan.uzb_tuman_jd_26010)
@dp.message_handler(filters.Text(contains="—Ç–∏–ª–Ω–∏ —û–∑–≥–∞—Ä—Ç–∏—Ä–∏—à", ignore_case=True), state=UZB_lan.uzb)
@dp.message_handler(filters.Text(contains="—Ç–∏–ª–Ω–∏ —û–∑–≥–∞—Ä—Ç–∏—Ä–∏—à", ignore_case=True), state=UZB_lan.uzb_post_avto)
@dp.message_handler(filters.Text(contains="—Ç–∏–ª–Ω–∏ —û–∑–≥–∞—Ä—Ç–∏—Ä–∏—à", ignore_case=True), state=UZB_lan.uzb_post_jd)
async def send_result(message: types.Message):
    await message.answer("üèö –°–∏–∑ –±–æ—à —Å–∞“≥–∏—Ñ–∞–≥–∞ “õ–∞–π—Ç–¥–∏–Ω–≥–∏–∑\n–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É\nüëáüèªüëáüèªüëáüèª",
                         reply_markup=language_option)
    await Start_zero.start_zero.set()


@dp.message_handler(filters.Text(contains="—û–∑–±–µ–∫—á–∞", ignore_case=True), state=Start_zero.start_zero)
@dp.message_handler(filters.Text(contains="–±–µ–∫–æ—Ä “õ–∏–ª–∏—à", ignore_case=True), state=UZB_lan.uzb)
async def start_register(message: types.Message):
    name = message.from_user.full_name

    await message.answer(
        "üì£–£—à–±—É –±–æ—Ç –æ—Ä“õ–∞–ª–∏ —Å–∏–∑ <b>–æ—á–∏“õ –≤–∞ —ç—Ä–∫–∏–Ω –±–æ–∂—Ö–æ–Ω–∞ –æ–º–±–æ—Ä–ª–∞—Ä</b> —Ç—û“ì—Ä–∏—Å–∏–¥–∞–≥–∏ –º–∞—ä–ª—É–º–æ—Ç–ª–∞—Ä–Ω–∏ –±–∏–ª–∏–± –æ–ª–∏—à–∏–Ω–≥–∏–∑ –º—É–º–∫–∏–Ω –±—û–ª–∞–¥–∏.\n"
        "–ñ—É–º–ª–∞–¥–∞–Ω:\nüì§–û–º–±–æ—Ä –Ω–æ–º–∏\nüë®‚Äç‚öñÔ∏è–û–º–±–æ—Ä –º—É–¥–∏—Ä–∏\n‚òéÔ∏è–¢–µ–ª.—Ä–∞“õ–∞–º–∏\n‚è∞–ò—à –≤–∞“õ—Ç–∏\nüìç–ú–∞–Ω–∑–∏–ª–∏\nüí∞–•–∏–∑–º–∞—Ç–ª–∞—Ä –Ω–∞—Ä—Ö–∏ –≤–∞ –±–æ—à“õ–∞–ª–∞—Ä.\n\n"
        "‚ÄºÔ∏è –ë–æ—Ç —Ñ–∞“õ–∞—Ç–≥–∏–Ω–∞ <b>–¢–æ—à–∫–µ–Ω—Ç —à–∞—Ö–∞—Ä –±–æ–∂—Ö–æ–Ω–∞ –±–æ—à“õ–∞—Ä–º–∞—Å–∏–≥–∞</b> “õ–∞—Ä–∞—à–ª–∏ –±—û–ª–≥–∞–Ω –æ–º–±–æ—Ä –º–∞—ä–ª—É–º–æ—Ç–ª–∞—Ä–∏–Ω–∏ —Ç–∞“õ–¥–∏–º “õ–∏–ª–∞–¥–∏!"
    )
    await message.answer(f"–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç —Ç—É—Ä–∏–Ω–∏ —Ç–∞–Ω–ª–∞–Ω–≥", reply_markup=main_menu_btn_uz)

    await UZB_lan.uzb.set()


@dp.message_handler(filters.Text(contains="–∞–≤—Ç–æ", ignore_case=True), state=UZB_lan.uzb)
@dp.message_handler(filters.Text(contains="–∞–≤—Ç–æ", ignore_case=True), state=UZB_lan.uzb_post_avto)
@dp.message_handler(filters.Text(contains="–∞–≤—Ç–æ", ignore_case=True), state=UZB_lan.uzb_post_jd)
@dp.message_handler(filters.Text(contains="–∞–≤—Ç–æ", ignore_case=True), state=UZB_lan.uzb_uz_yukli)
async def start_register(message: types.Message):
    if message.text == "üöö –ê–≤—Ç–æ":
        await message.answer(f"–°–∏–∑ –ê–í–¢–û –π—û–Ω–∞–ª–∏—à–∏–Ω–∏ —Ç–∞–Ω–ª–∞–¥–∏–Ω–≥–∏–∑", reply_markup=bekor_qilish_uzb)
        await message.answer(f"üõÉ –ë–æ–∂—Ö–æ–Ω–∞ –ø–æ—Å—Ç–∏–Ω–∏ —Ç–∞–Ω–ª–∞–Ω–≥", reply_markup=post_nomi_avto_uzb)
        await UZB_lan.uzb_post_avto.set()

    elif message.text == "üöâ –ê–≤—Ç–æ-–ñ–î":
        await message.answer(f"–°–∏–∑ –ê–í–¢–û-–ñ–î –π—û–Ω–∞–ª–∏—à–∏–Ω–∏ —Ç–∞–Ω–ª–∞–¥–∏–Ω–≥–∏–∑", reply_markup=bekor_qilish_uzb)
        await message.answer(f"üõÉ –ë–æ–∂—Ö–æ–Ω–∞ –ø–æ—Å—Ç–∏–Ω–∏ —Ç–∞–Ω–ª–∞–Ω–≥", reply_markup=post_nomi_avto_temiryul_uzb)
        await UZB_lan.uzb_post_jd.set()

    else:
        await message.answer("‚ùå‚ùå‚ùå\n–ù–æ—Ç—û“ì—Ä–∏ “õ–∏–π–º–∞—Ç –∫–∏—Ä–∏—Ç–¥–∏–Ω–≥–∏–∑. –ò–ª—Ç–∏–º–æ—Å /start —Ç—É–≥–º–∞—Å–∏ –æ—Ä“õ–∞–ª–∏ “õ–∞–π—Ç–∞–¥–∞–Ω —è–Ω–≥–∏–ª–∞–Ω–≥.")
        await UZB_lan.uzb.set()


@dp.message_handler(filters.Text(contains="“õ–∏–¥–∏—Ä–∏—à", ignore_case=True), state=UZB_lan.uzb)
@dp.message_handler(filters.Text(contains="“õ–∏–¥–∏—Ä–∏—à", ignore_case=True), state=UZB_lan.uzb_uz_yukli)
async def start_register(message: types.Message):
    await message.answer(f"üîç “ö–∏–¥–∏—Ä—É–≤ –±—û–ª–∏–º–∏ —è—è—Å–∞–ª–∏—à –∂–∞—Ä–∞—ë–Ω–∏–¥–∞")
    await UZB_lan.uzb.set()


@dp.message_handler(filters.Text(contains="—û–∑ —é–∫–ª–∏ –æ–º–±–æ—Ä–ª–∞—Ä", ignore_case=True), state=UZB_lan.uzb)
async def start_register(message: types.Message):
    await message.answer(f"–é–∑ —é–∫–ª–∏ –æ–º–±–æ—Ä –Ω–æ–º–∏–Ω–∏ —Ç–∞–Ω–ª–∞–Ω–≥", reply_markup=uz_yukli_ombor_uzb)
    await UZB_lan.uzb_uz_yukli.set()

@dp.callback_query_handler(state=UZB_lan.uzb_uz_yukli)
async def start_shifokor(call: CallbackQuery):
    await call.message.answer("üòê –£–∑—É—Ä “≥–æ–∑–∏—Ä—á–∞ —É—à–±—É –æ–º–±–æ—Ä –º–∞—ä–ª—É–º–æ—Ç–ª–∞—Ç–∏ “õ—è–π—Ç–∞ –∏—à–ª–∞—à –∂–∞—Ä–∞—ë–Ω–∏–¥–∞. –¢–µ–∑ –∫—É–Ω–¥–∞ –º–∞—ä–ª—É–º–æ—Ç–ª–∞—Ä “õ—û—à–∏–ª–∞–¥–º ü§ì")


# --------------------------AVTO------------------

@dp.message_handler(filters.Text(contains="260", ignore_case=True), state=UZB_lan.uzb_post_avto)
@dp.message_handler(filters.Text(contains="260", ignore_case=True), state=UZB_lan.uzb_sklad_avto_26002)
@dp.message_handler(filters.Text(contains="260", ignore_case=True), state=UZB_lan.uzb_sklad_avto_26003)
@dp.message_handler(filters.Text(contains="260", ignore_case=True), state=UZB_lan.uzb_sklad_avto_26004)
@dp.message_handler(filters.Text(contains="260", ignore_case=True), state=UZB_lan.uzb_sklad_avto_26010)
async def start_register(message: types.Message):
    if message.text == '26002 - ‚Äú–¢–æ—à–∫–µ–Ω—Ç-—Ç–æ–≤–∞—Ä‚Äù –¢–ò–§':
        await message.answer(f'–°–∏–∑ "–¢–æ—à–∫–µ–Ω—Ç-—Ç–æ–≤–∞—Ä" –¢–ò–§ –±–æ–∂—Ö–æ–Ω–∞ –ø–æ—Å—Ç–∏–Ω–∏ —Ç–∞–Ω–ª–∞–¥–∏–Ω–≥–∏–∑', reply_markup=orqaga_qaytish_uzb)
        await message.answer(f"–ò–ª—Ç–∏–º–æ—Å —Ç—É–º–∞–Ω –Ω–æ–º–∏–Ω–∏ —Ç–∞–Ω–ª–∞–Ω–≥", reply_markup=Tumanlar_26002_uzb_avto)
        await UZB_lan.uzb_sklad_avto_26002.set()

    elif message.text == "26003 - ‚Äú–ê—Ä“õ –±—É–ª–æ“õ‚Äù –¢–ò–§":
        await message.answer(f'–°–∏–∑ "–ê—Ä–∫ –±—É–ª–æ“õ" –¢–ò–§ –±–æ–∂—Ö–æ–Ω–∞ –ø–æ—Å—Ç–∏–Ω–∏ —Ç–∞–Ω–ª–∞–¥–∏–Ω–≥–∏–∑', reply_markup=orqaga_qaytish_uzb)
        await message.answer(f"–ò–ª—Ç–∏–º–æ—Å —Ç—É–º–∞–Ω –Ω–æ–º–∏–Ω–∏ —Ç–∞–Ω–ª–∞–Ω–≥", reply_markup=Tumanlar_26003_uzb_avto)
        await UZB_lan.uzb_sklad_avto_26003.set()

    elif message.text == '26004 - ‚Äú–ß—É“õ—É—Ä—Å–æ–π‚Äù –¢–ò–§':
        await message.answer(f'–°–∏–∑ "–ß—É“õ—É—Ä—Å–æ–π" –¢–ò–§ –±–æ–∂—Ö–æ–Ω–∞ –ø–æ—Å—Ç–∏–Ω–∏ —Ç–∞–Ω–ª–∞–¥–∏–Ω–≥–∏–∑', reply_markup=orqaga_qaytish_uzb)
        await message.answer(f"–ò–ª—Ç–∏–º–æ—Å —Ç—É–º–∞–Ω –Ω–æ–º–∏–Ω–∏ —Ç–∞–Ω–ª–∞–Ω–≥", reply_markup=Tumanlar_26004_uzb_avto)
        await UZB_lan.uzb_sklad_avto_26004.set()

    elif message.text == "26010 - ‚Äú–°–∏—Ä“ì–∞–ª–∏‚Äù –¢–ò–§":
        await message.answer(f'–°–∏–∑ "–°–∏—Ä“ì–∞–ª–∏" –¢–ò–§ –±–æ–∂—Ö–æ–Ω–∞ –ø–æ—Å—Ç–∏–Ω–∏ —Ç–∞–Ω–ª–∞–¥–∏–Ω–≥–∏–∑', reply_markup=orqaga_qaytish_uzb)
        await message.answer(f"–ò–ª—Ç–∏–º–æ—Å —Ç—É–º–∞–Ω –Ω–æ–º–∏–Ω–∏ —Ç–∞–Ω–ª–∞–Ω–≥", reply_markup=Tumanlar_26010_uzb_avto)
        await UZB_lan.uzb_sklad_avto_26010.set()

    else:
        pass


# --------------------------JD------------------

@dp.message_handler(filters.Text(contains="260", ignore_case=True), state=UZB_lan.uzb_post_jd)
@dp.message_handler(filters.Text(contains="260", ignore_case=True), state=UZB_lan.uzb_sklad_jd_26002)
@dp.message_handler(filters.Text(contains="260", ignore_case=True), state=UZB_lan.uzb_sklad_jd_26003)
@dp.message_handler(filters.Text(contains="260", ignore_case=True), state=UZB_lan.uzb_sklad_jd_26004)
@dp.message_handler(filters.Text(contains="260", ignore_case=True), state=UZB_lan.uzb_sklad_jd_26010)
async def start_register(message: types.Message):
    if message.text == '26002 - ‚Äú–¢–æ—à–∫–µ–Ω—Ç-—Ç–æ–≤–∞—Ä‚Äù –¢–ò–§':
        await message.answer(f'–°–∏–∑ "–¢–æ—à–∫–µ–Ω—Ç-—Ç–æ–≤–∞—Ä" –¢–ò–§ –±–æ–∂—Ö–æ–Ω–∞ –ø–æ—Å—Ç–∏–Ω–∏ —Ç–∞–Ω–ª–∞–¥–∏–Ω–≥–∏–∑', reply_markup=orqaga_qaytish_uzb)
        await message.answer(f"–ò–ª—Ç–∏–º–æ—Å —Ç—É–º–∞–Ω –Ω–æ–º–∏–Ω–∏ —Ç–∞–Ω–ª–∞–Ω–≥", reply_markup=Tumanlar_26002_uzb_jd)
        await UZB_lan.uzb_sklad_jd_26002.set()

    elif message.text == "26003 - ‚Äú–ê—Ä“õ –±—É–ª–æ“õ‚Äù –¢–ò–§":
        await message.answer(f'–°–∏–∑ "–ê—Ä–∫ –±—É–ª–æ“õ" –¢–ò–§ –±–æ–∂—Ö–æ–Ω–∞ –ø–æ—Å—Ç–∏–Ω–∏ —Ç–∞–Ω–ª–∞–¥–∏–Ω–≥–∏–∑', reply_markup=orqaga_qaytish_uzb)
        await message.answer(f"–ò–ª—Ç–∏–º–æ—Å —Ç—É–º–∞–Ω –Ω–æ–º–∏–Ω–∏ —Ç–∞–Ω–ª–∞–Ω–≥", reply_markup=Tumanlar_26003_uzb_jd)
        await UZB_lan.uzb_sklad_jd_26003.set()

    elif message.text == '26004 - ‚Äú–ß—É“õ—É—Ä—Å–æ–π‚Äù –¢–ò–§':
        await message.answer(f'–°–∏–∑ "–ß—É“õ—É—Ä—Å–æ–π" –¢–ò–§ –±–æ–∂—Ö–æ–Ω–∞ –ø–æ—Å—Ç–∏–Ω–∏ —Ç–∞–Ω–ª–∞–¥–∏–Ω–≥–∏–∑', reply_markup=orqaga_qaytish_uzb)
        await message.answer(f"–ò–ª—Ç–∏–º–æ—Å —Ç—É–º–∞–Ω –Ω–æ–º–∏–Ω–∏ —Ç–∞–Ω–ª–∞–Ω–≥", reply_markup=Tumanlar_26004_uzb_jd)
        await UZB_lan.uzb_sklad_jd_26004.set()

    elif message.text == "26010 - ‚Äú–°–∏—Ä“ì–∞–ª–∏‚Äù –¢–ò–§":
        await message.answer(f'–°–∏–∑ "–°–∏—Ä“ì–∞–ª–∏" –¢–ò–§ –±–æ–∂—Ö–æ–Ω–∞ –ø–æ—Å—Ç–∏–Ω–∏ —Ç–∞–Ω–ª–∞–¥–∏–Ω–≥–∏–∑', reply_markup=orqaga_qaytish_uzb)
        await message.answer(f"–ò–ª—Ç–∏–º–æ—Å —Ç—É–º–∞–Ω –Ω–æ–º–∏–Ω–∏ —Ç–∞–Ω–ª–∞–Ω–≥", reply_markup=Tumanlar_26010_uzb_jd)
        await UZB_lan.uzb_sklad_jd_26010.set()

    else:
        pass


# --------------------------AVTO------------------

@dp.message_handler(filters.Text(contains="–æ—Ä“õ–∞–≥–∞", ignore_case=True), state=UZB_lan.uzb_post_avto)
async def start_register(message: types.Message):
    if message.text == "‚¨ÖÔ∏è –û—Ä“õ–∞–≥–∞":
        await message.answer(f"–ò–ª—Ç–∏–º–æ—Å —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç —Ç—É—Ä–∏–Ω–∏ —Ç–∞–Ω–ª–∞–Ω–≥", reply_markup=main_menu_btn_uz)
        await UZB_lan.uzb.set()
    else:
        pass


@dp.message_handler(filters.Text(contains="–æ—Ä“õ–∞–≥–∞", ignore_case=True), state=UZB_lan.uzb_sklad_avto_26002)
@dp.message_handler(filters.Text(contains="–æ—Ä“õ–∞–≥–∞", ignore_case=True), state=UZB_lan.uzb_sklad_avto_26003)
@dp.message_handler(filters.Text(contains="–æ—Ä“õ–∞–≥–∞", ignore_case=True), state=UZB_lan.uzb_sklad_avto_26004)
@dp.message_handler(filters.Text(contains="–æ—Ä“õ–∞–≥–∞", ignore_case=True), state=UZB_lan.uzb_sklad_avto_26010)
async def start_register(message: types.Message):
    if message.text == "‚¨ÖÔ∏è –û—Ä“õ–∞–≥–∞":
        await message.answer(f"–ò–ª—Ç–∏–º–æ—Å —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç —Ç—É—Ä–∏–Ω–∏ —Ç–∞–Ω–ª–∞–Ω–≥", reply_markup=main_menu_btn_uz)
        await UZB_lan.uzb_post_avto.set()
    else:
        pass


# --------------------------JD------------------

@dp.message_handler(filters.Text(contains="–æ—Ä“õ–∞–≥–∞", ignore_case=True), state=UZB_lan.uzb_post_jd)
async def start_register(message: types.Message):
    if message.text == "‚¨ÖÔ∏è –û—Ä“õ–∞–≥–∞":
        await message.answer(f"–ò–ª—Ç–∏–º–æ—Å —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç —Ç—É—Ä–∏–Ω–∏ —Ç–∞–Ω–ª–∞–Ω–≥", reply_markup=main_menu_btn_uz)
        await UZB_lan.uzb.set()
    else:
        pass


@dp.message_handler(filters.Text(contains="–æ—Ä“õ–∞–≥–∞", ignore_case=True), state=UZB_lan.uzb_sklad_jd_26002)
@dp.message_handler(filters.Text(contains="–æ—Ä“õ–∞–≥–∞", ignore_case=True), state=UZB_lan.uzb_sklad_jd_26003)
@dp.message_handler(filters.Text(contains="–æ—Ä“õ–∞–≥–∞", ignore_case=True), state=UZB_lan.uzb_sklad_jd_26004)
@dp.message_handler(filters.Text(contains="–æ—Ä“õ–∞–≥–∞", ignore_case=True), state=UZB_lan.uzb_sklad_jd_26010)
async def start_register(message: types.Message):
    if message.text == "‚¨ÖÔ∏è –û—Ä“õ–∞–≥–∞":
        await message.answer(f"–ò–ª—Ç–∏–º–æ—Å —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç —Ç—É—Ä–∏–Ω–∏ —Ç–∞–Ω–ª–∞–Ω–≥ ", reply_markup=main_menu_btn_uz)
        await UZB_lan.uzb_post_jd.set()
    else:
        pass


# --------------------------AVTO_26002------------------

@dp.callback_query_handler(text="–ë–µ–∫—Ç–µ–º–∏—Ä —Ç—É–º–∞–Ω–∏ 26002_avto", state=UZB_lan.uzb_sklad_avto_26002)
async def start_shifokor(call: CallbackQuery):
    await call.message.answer("–û–º–±–æ—Ä –Ω–æ–º–∏–Ω–∏ —Ç–∞–Ω–ª–∞–Ω–≥", reply_markup=avto_26002_bektemir)


@dp.callback_query_handler(text="–Ø—à–Ω–æ–±–æ–¥ —Ç—É–º–∞–Ω–∏ 26002_avto", state=UZB_lan.uzb_sklad_avto_26002)
async def start_shifokor(call: CallbackQuery):
    await call.message.answer("–û–º–±–æ—Ä –Ω–æ–º–∏–Ω–∏ —Ç–∞–Ω–ª–∞–Ω–≥", reply_markup=avto_26002_yashnabod)


@dp.callback_query_handler(text="–®–∞–π—Ö–æ–Ω—Ç–æ“≥—É—Ä —Ç—É–º–∞–Ω–∏ 26002_avto", state=UZB_lan.uzb_sklad_avto_26002)
async def start_shifokor(call: CallbackQuery):
    await call.message.answer("–û–º–±–æ—Ä –Ω–æ–º–∏–Ω–∏ —Ç–∞–Ω–ª–∞–Ω–≥", reply_markup=avto_26002_yakkasaroy)


@dp.callback_query_handler(text="–Ø–∫–∫–∞—Å–∞—Ä–æ–π —Ç—É–º–∞–Ω–∏ 26002_avto", state=UZB_lan.uzb_sklad_avto_26002)
async def start_shifokor(call: CallbackQuery):
    await call.message.answer("–û–º–±–æ—Ä –Ω–æ–º–∏–Ω–∏ —Ç–∞–Ω–ª–∞–Ω–≥", reply_markup=avto_26002_shayxontohur)

@dp.callback_query_handler(text='"HEKLER" MCHJ', state=UZB_lan.uzb_sklad_avto_26002)
@dp.callback_query_handler(text='–û–û–û "APP SERVIS"', state=UZB_lan.uzb_sklad_avto_26002)
@dp.callback_query_handler(text='–û–û–û "TOP SMART LINE"', state=UZB_lan.uzb_sklad_avto_26002)
@dp.callback_query_handler(text='"DIPLOMATIK KORPUSGA XIZMAT KO`RSATISH BYUROSI" DUK', state=UZB_lan.uzb_sklad_avto_26002)
@dp.callback_query_handler(text='–û–û–û "HIRING-SERVIS"', state=UZB_lan.uzb_sklad_avto_26002)
async def start_shifokor(call: CallbackQuery):
    await call.message.answer("‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è\n\n–û–º–±–æ—Ä –º–∞—ä–ª—É–º–æ—Ç–ª–∞—Ä–∏ “≥–∞–ª–∏ –∫–∏—Ä–∏—Ç–∏–ª–º–∞–≥–∞–Ω. –ë—É —à—É–Ω—á–∞–∫–∏ –Ω–∞–º—É–Ω–∞")
    await call.message.answer(hide_link("https://telegra.ph/OOO-Coca-Cola-Ichimligi-Uzbekistan-LTD-03-24"))
    await call.message.answer_location(latitude=41.296201, longitude=69.298287)

# --------------------------AVTO_26003------------------


@dp.callback_query_handler(text='–Ø–Ω–≥–∏–π—û–ª —Ç—É–º–∞–Ω–∏ 26003_avto', state=UZB_lan.uzb_sklad_avto_26003)
async def start_shifokor(call: CallbackQuery):
    await call.message.answer("–û–º–±–æ—Ä –Ω–æ–º–∏–Ω–∏ —Ç–∞–Ω–ª–∞–Ω–≥", reply_markup=avto_26003_yangiyul)


@dp.callback_query_handler(text='–ó–∞–Ω–≥–æ—Ç–∞ —Ç—É–º–∞–Ω–∏ 26003_avto', state=UZB_lan.uzb_sklad_avto_26003)
async def start_shifokor(call: CallbackQuery):
    await call.message.answer("–û–º–±–æ—Ä –Ω–æ–º–∏–Ω–∏ —Ç–∞–Ω–ª–∞–Ω–≥", reply_markup=avto_26003_zangiota)


@dp.callback_query_handler(text='–°–µ—Ä–≥–µ–ª–∏ —Ç—É–º–∞–Ω–∏ 26003_avto', state=UZB_lan.uzb_sklad_avto_26003)
async def start_shifokor(call: CallbackQuery):
    await call.message.answer("–û–º–±–æ—Ä –Ω–æ–º–∏–Ω–∏ —Ç–∞–Ω–ª–∞–Ω–≥", reply_markup=avto_26003_sergeli)


@dp.callback_query_handler(text='–ß–∏–ª–æ–Ω–∑–æ—Ä —Ç—É–º–∞–Ω–∏ 26003_avto', state=UZB_lan.uzb_sklad_avto_26003)
async def start_shifokor(call: CallbackQuery):
    await call.message.answer("–û–º–±–æ—Ä –Ω–æ–º–∏–Ω–∏ —Ç–∞–Ω–ª–∞–Ω–≥", reply_markup=avto_26003_chilonzor)


@dp.callback_query_handler(text='–Ø–∫–∫–∞—Å–∞—Ä–æ–π —Ç—É–º–∞–Ω–∏ 26003_avto', state=UZB_lan.uzb_sklad_avto_26003)
async def start_shifokor(call: CallbackQuery):
    await call.message.answer("–û–º–±–æ—Ä –Ω–æ–º–∏–Ω–∏ —Ç–∞–Ω–ª–∞–Ω–≥", reply_markup=avto_26003_yakkasaroy)


@dp.callback_query_handler(text='"ARK-BULOQ KARVONSAROYI" MCHJ', state=UZB_lan.uzb_sklad_avto_26003)
@dp.callback_query_handler(text='–û–û–û "HIGHWAY LOGISTICS CENTER"', state=UZB_lan.uzb_sklad_avto_26003)
@dp.callback_query_handler(text='–ß–ü "PHARMAX"', state=UZB_lan.uzb_sklad_avto_26003)
@dp.callback_query_handler(text='–û–û–û "SHOHJAHON AGRO"', state=UZB_lan.uzb_sklad_avto_26003)
@dp.callback_query_handler(text='–û–û–û "CAPITAL LOGISTICS 2020"', state=UZB_lan.uzb_sklad_avto_26003)
@dp.callback_query_handler(text='OOO "ELITE GLOBAL PLUS"', state=UZB_lan.uzb_sklad_avto_26003)
async def start_shifokor(call: CallbackQuery):
    await call.message.answer("‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è\n\n–û–º–±–æ—Ä –º–∞—ä–ª—É–º–æ—Ç–ª–∞—Ä–∏ “≥–∞–ª–∏ –∫–∏—Ä–∏—Ç–∏–ª–º–∞–≥–∞–Ω. –ë—É —à—É–Ω—á–∞–∫–∏ –Ω–∞–º—É–Ω–∞")
    await call.message.answer(hide_link("https://telegra.ph/OOO-Coca-Cola-Ichimligi-Uzbekistan-LTD-03-24"))
    await call.message.answer_location(latitude=41.296201, longitude=69.298287)

# --------------------------JD------------------

# @dp.callback_query_handler(text="–ë–µ–∫—Ç–µ–º–∏—Ä —Ç—É–º–∞–Ω–∏", state=UZB_lan.uzb_sklad_jd)
# async def start_shifokor(call: CallbackQuery):
#     await call.message.answer(hide_link("https://telegra.ph/OOO-Coca-Cola-Ichimligi-Uzbekistan-LTD-03-24"))
#     await call.message.answer_location(latitude=41.296201, longitude=69.298287)

    # await call.message.answer_photo(photo='https://telegra.ph/coca-cola-mchj-03-23', caption="BEKTEMIRRRRRRRRRRR")
    # await UZB_lan.uzb_tuman.set()

    # def webAppKeyboard():  # —Å–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å webapp –∫–Ω–æ–ø–∫–æ–π
    #     keyboard = types.ReplyKeyboardMarkup(row_width=1)  # —Å–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    #     webAppTest = types.WebAppInfo("https://www.kun.uz")
    #     one_butt = types.KeyboardButton(text="–¢–µ—Å—Ç–æ–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞", web_app=webAppTest)  # —Å–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É —Ç–∏–ø–∞ webapp
    #     keyboard.add(one_butt)  # –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –≤ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    #     return keyboard  # –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É

    # await call.message.answer("Lorem", reply_markup=webAppKeyboard())
